<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.samples.petclinic.client</groupId>
	<artifactId>spring-petclinic-customers-service</artifactId>
	<packaging>jar</packaging>
	<description>Spring PetClinic Customers Service</description>

	<parent>
		<groupId>org.springframework.samples</groupId>
		<artifactId>spring-petclinic-microservices</artifactId>
        <version>${revision}</version>
	</parent>

    <properties>
        <revision>latest</revision>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>

    <distributionManagement>
        <repository>
            <id>atmosphere-nexus</id>
            <name>atmosphere-releases</name>
            <url>https://nexus.atm.osp.tech/repository/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>atmosphere-nexus</id>
            <name>atmosphere-snapshots</name>
            <url>https://nexus.atm.osp.tech/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!-- local -->
        <dependency>
            <groupId>org.springframework.samples</groupId>
            <artifactId>spring-petclinic-jarjar</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.samples</groupId>
            <artifactId>spring-petclinic-common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Spring Cloud -->

        <!-- Third parties -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
            <version>8.0.31</version>
        </dependency>

        <!-- Observability -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <!-- OpenTelemetry version -->
        <!-- For Tracing -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-otel</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- local -->
        <profile>
            <id>local</id>
            <activation>
                <property>
                    <name>profile</name>
                    <value>local</value>
                </property>
            </activation>
            <dependencies>
                <!-- allows a locally running application to communicate with a cloud-based environment passes AccessPolicy/Signature, configures panda -->
                <dependency>
                    <groupId>com.ocadotechnology.jarjar</groupId>
                    <artifactId>jarjar-starter-local-http-core</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
